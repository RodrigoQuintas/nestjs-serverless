service: nest-serverless-framework-demo
useDotenv: true
plugins:
  - serverless-offline
  - serverless-step-functions
  - serverless-dotenv-plugin
provider:
  name: aws
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ec2:DescribeNetworkInterfaces
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:DescribeInstances
            - ec2:AttachNetworkInterface
            - ec2:AssignPrivateIpAddresses
            - ec2:UnassignPrivateIpAddresses
          Resource: "*"
  runtime: nodejs18.x
functions:
  main:
    handler: dist/serverless.handler
    events:
      - http:
          method: any
          path: /
      - http:
          method: ANY
          path: "{proxy+}"
  stepFunctions: 
    handler: dist/serverless.handlerStepFunctions
  microservices:
    handler: dist/microservices.handler
    events:
      - rabbitmq:
          arn: ${env:RABBIT_BROKER_ARN}
          queue: sales
          basicAuthArn: ${env:RABBIT_BASIC_AUTH_ARN}
      - rabbitmq:
          arn: ${env:RABBIT_BROKER_ARN}
          queue: informations
          basicAuthArn: ${env:RABBIT_BASIC_AUTH_ARN}
      - rabbitmq:
          arn: ${env:RABBIT_BROKER_ARN}
          queue: transports
          basicAuthArn: ${env:RABBIT_BASIC_AUTH_ARN}
stepFunctions:
  stateMachines:
    testStepFunction: ${file(src/step-functions/test-step-function/definition.yml)}
